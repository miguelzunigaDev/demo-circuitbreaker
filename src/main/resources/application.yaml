server:
  port: 8098

spring:
  application:
    name: demo-circuit-breaker

# --- only for non-production environment ---
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
# --- ------------------------------------ ---
  health:
    diskspace:
      enabled: false
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: false
  metrics:
    tags:
      application: @project.name@
    distribution:
      percentiles-histogram:
        http.server:
          requests: true
        resilience4j:
          circuitbreaker:
            calls: true

info:
  app:
    name: @project.name@
    description: @project.description@
    version: @project.version@
    java.version: @java.version@
    environment: ${spring.profiles.active}

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
  circuit-breaker:
    enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 15s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
      ignoreExceptions:
        - com.poc.democircuitbreaker.infrastructure.exceptions.BusinessException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      ignoreExceptions:
        - com.poc.democircuitbreaker.infrastructure.exceptions.BusinessException
  instances:
    transfer:
      baseConfig: default
    customClient:
      registerHealthIndicator: false
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordFailurePredicate: com.poc.democircuitbreaker.infrastructure.exceptions.RecordFailurePredicate
resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 100
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
      ignoreExceptions:
        - com.poc.democircuitbreaker.infrastructure.exceptions.BusinessException
  instances:
    transfer:
      baseConfig: default
    customClient:
      baseConfig: default
resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100
  instances:
    transfer:
      maxConcurrentCalls: 10
    customClient:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
  instances:
    transfer:
      baseConfig: default
    customClient:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: false
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      eventConsumerBufferSize: 100
  instances:
    transfer:
      baseConfig: default
    customClient:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s

resilience4j.timelimiter:
  configs:
    default:
      cancelRunningFuture: false
      timeoutDuration: 2s
  instances:
    transfer:
      baseConfig: default
    customClient:
      baseConfig: default

